package gen;
// Generated from C:/Users/ASUS/Documents/GitHub/angularCompiler/src/HtmlLexer.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class HtmlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DOCTYPE=1, COMMENT=2, CDATA=3, OPEN_END=4, OPEN=5, TEXT=6, INTERPOLATION=7, 
		WS=8, SLASH_CLOSE=9, GT=10, EQUALS=11, DQ_STRING=12, SQ_STRING=13, VOID_TAG=14, 
		NAME=15, SLASH=16, TAG_WS=17;
	public static final int
		TAG=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "TAG"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DOCTYPE", "COMMENT", "CDATA", "OPEN_END", "OPEN", "TEXT", "INTERPOLATION", 
			"WS", "SLASH_CLOSE", "GT", "EQUALS", "DQ_STRING", "SQ_STRING", "VOID_TAG", 
			"NAME", "SLASH", "TAG_WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'</'", "'<'", null, null, null, "'/>'", "'>'", 
			"'='", null, null, null, null, "'/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "DOCTYPE", "COMMENT", "CDATA", "OPEN_END", "OPEN", "TEXT", "INTERPOLATION", 
			"WS", "SLASH_CLOSE", "GT", "EQUALS", "DQ_STRING", "SQ_STRING", "VOID_TAG", 
			"NAME", "SLASH", "TAG_WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public HtmlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "HtmlLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0011\u00e1\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002"+
		"\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0005"+
		"\u00001\b\u0000\n\u0000\f\u00004\t\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0005"+
		"\u0001>\b\u0001\n\u0001\f\u0001A\t\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0005\u0002R\b\u0002\n\u0002\f\u0002U\t\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0005\u0004\u0005e\b\u0005\u000b\u0005\f\u0005f\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0005\u0006m\b\u0006\n\u0006\f\u0006p\t\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0004\u0007v\b\u0007"+
		"\u000b\u0007\f\u0007w\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0005\u000b\u0089\b\u000b\n\u000b\f\u000b\u008c\t\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0005\f\u0092\b\f\n\f\f\f\u0095"+
		"\t\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0003\r\u00d0\b\r\u0001\u000e\u0001\u000e\u0005"+
		"\u000e\u00d4\b\u000e\n\u000e\f\u000e\u00d7\t\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0004\u0010\u00dc\b\u0010\u000b\u0010\f\u0010\u00dd\u0001"+
		"\u0010\u0001\u0010\u00042?Sn\u0000\u0011\u0002\u0001\u0004\u0002\u0006"+
		"\u0003\b\u0004\n\u0005\f\u0006\u000e\u0007\u0010\b\u0012\t\u0014\n\u0016"+
		"\u000b\u0018\f\u001a\r\u001c\u000e\u001e\u000f \u0010\"\u0011\u0002\u0000"+
		"\u0001\u0006\u0003\u0000\n\n\r\r<<\u0003\u0000\t\n\r\r  \u0003\u0000\n"+
		"\n\r\r\"\"\u0003\u0000\n\n\r\r\'\'\u0004\u0000::AZ__az\u0005\u0000-.0"+
		":AZ__az\u00f6\u0000\u0002\u0001\u0000\u0000\u0000\u0000\u0004\u0001\u0000"+
		"\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\b\u0001\u0000\u0000"+
		"\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000"+
		"\u0000\u000e\u0001\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000"+
		"\u0001\u0012\u0001\u0000\u0000\u0000\u0001\u0014\u0001\u0000\u0000\u0000"+
		"\u0001\u0016\u0001\u0000\u0000\u0000\u0001\u0018\u0001\u0000\u0000\u0000"+
		"\u0001\u001a\u0001\u0000\u0000\u0000\u0001\u001c\u0001\u0000\u0000\u0000"+
		"\u0001\u001e\u0001\u0000\u0000\u0000\u0001 \u0001\u0000\u0000\u0000\u0001"+
		"\"\u0001\u0000\u0000\u0000\u0002$\u0001\u0000\u0000\u0000\u00047\u0001"+
		"\u0000\u0000\u0000\u0006F\u0001\u0000\u0000\u0000\bZ\u0001\u0000\u0000"+
		"\u0000\n_\u0001\u0000\u0000\u0000\fd\u0001\u0000\u0000\u0000\u000eh\u0001"+
		"\u0000\u0000\u0000\u0010u\u0001\u0000\u0000\u0000\u0012{\u0001\u0000\u0000"+
		"\u0000\u0014\u0080\u0001\u0000\u0000\u0000\u0016\u0084\u0001\u0000\u0000"+
		"\u0000\u0018\u0086\u0001\u0000\u0000\u0000\u001a\u008f\u0001\u0000\u0000"+
		"\u0000\u001c\u00cf\u0001\u0000\u0000\u0000\u001e\u00d1\u0001\u0000\u0000"+
		"\u0000 \u00d8\u0001\u0000\u0000\u0000\"\u00db\u0001\u0000\u0000\u0000"+
		"$%\u0005<\u0000\u0000%&\u0005!\u0000\u0000&\'\u0001\u0000\u0000\u0000"+
		"\'(\u0005D\u0000\u0000()\u0005O\u0000\u0000)*\u0005C\u0000\u0000*+\u0005"+
		"T\u0000\u0000+,\u0005Y\u0000\u0000,-\u0005P\u0000\u0000-.\u0005E\u0000"+
		"\u0000.2\u0001\u0000\u0000\u0000/1\t\u0000\u0000\u00000/\u0001\u0000\u0000"+
		"\u000014\u0001\u0000\u0000\u000023\u0001\u0000\u0000\u000020\u0001\u0000"+
		"\u0000\u000035\u0001\u0000\u0000\u000042\u0001\u0000\u0000\u000056\u0005"+
		">\u0000\u00006\u0003\u0001\u0000\u0000\u000078\u0005<\u0000\u000089\u0005"+
		"!\u0000\u00009:\u0005-\u0000\u0000:;\u0005-\u0000\u0000;?\u0001\u0000"+
		"\u0000\u0000<>\t\u0000\u0000\u0000=<\u0001\u0000\u0000\u0000>A\u0001\u0000"+
		"\u0000\u0000?@\u0001\u0000\u0000\u0000?=\u0001\u0000\u0000\u0000@B\u0001"+
		"\u0000\u0000\u0000A?\u0001\u0000\u0000\u0000BC\u0005-\u0000\u0000CD\u0005"+
		"-\u0000\u0000DE\u0005>\u0000\u0000E\u0005\u0001\u0000\u0000\u0000FG\u0005"+
		"<\u0000\u0000GH\u0005!\u0000\u0000HI\u0005[\u0000\u0000IJ\u0005C\u0000"+
		"\u0000JK\u0005D\u0000\u0000KL\u0005A\u0000\u0000LM\u0005T\u0000\u0000"+
		"MN\u0005A\u0000\u0000NO\u0005[\u0000\u0000OS\u0001\u0000\u0000\u0000P"+
		"R\t\u0000\u0000\u0000QP\u0001\u0000\u0000\u0000RU\u0001\u0000\u0000\u0000"+
		"ST\u0001\u0000\u0000\u0000SQ\u0001\u0000\u0000\u0000TV\u0001\u0000\u0000"+
		"\u0000US\u0001\u0000\u0000\u0000VW\u0005]\u0000\u0000WX\u0005]\u0000\u0000"+
		"XY\u0005>\u0000\u0000Y\u0007\u0001\u0000\u0000\u0000Z[\u0005<\u0000\u0000"+
		"[\\\u0005/\u0000\u0000\\]\u0001\u0000\u0000\u0000]^\u0006\u0003\u0000"+
		"\u0000^\t\u0001\u0000\u0000\u0000_`\u0005<\u0000\u0000`a\u0001\u0000\u0000"+
		"\u0000ab\u0006\u0004\u0000\u0000b\u000b\u0001\u0000\u0000\u0000ce\b\u0000"+
		"\u0000\u0000dc\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000\u0000fd\u0001"+
		"\u0000\u0000\u0000fg\u0001\u0000\u0000\u0000g\r\u0001\u0000\u0000\u0000"+
		"hi\u0005{\u0000\u0000ij\u0005{\u0000\u0000jn\u0001\u0000\u0000\u0000k"+
		"m\t\u0000\u0000\u0000lk\u0001\u0000\u0000\u0000mp\u0001\u0000\u0000\u0000"+
		"no\u0001\u0000\u0000\u0000nl\u0001\u0000\u0000\u0000oq\u0001\u0000\u0000"+
		"\u0000pn\u0001\u0000\u0000\u0000qr\u0005}\u0000\u0000rs\u0005}\u0000\u0000"+
		"s\u000f\u0001\u0000\u0000\u0000tv\u0007\u0001\u0000\u0000ut\u0001\u0000"+
		"\u0000\u0000vw\u0001\u0000\u0000\u0000wu\u0001\u0000\u0000\u0000wx\u0001"+
		"\u0000\u0000\u0000xy\u0001\u0000\u0000\u0000yz\u0006\u0007\u0001\u0000"+
		"z\u0011\u0001\u0000\u0000\u0000{|\u0005/\u0000\u0000|}\u0005>\u0000\u0000"+
		"}~\u0001\u0000\u0000\u0000~\u007f\u0006\b\u0002\u0000\u007f\u0013\u0001"+
		"\u0000\u0000\u0000\u0080\u0081\u0005>\u0000\u0000\u0081\u0082\u0001\u0000"+
		"\u0000\u0000\u0082\u0083\u0006\t\u0002\u0000\u0083\u0015\u0001\u0000\u0000"+
		"\u0000\u0084\u0085\u0005=\u0000\u0000\u0085\u0017\u0001\u0000\u0000\u0000"+
		"\u0086\u008a\u0005\"\u0000\u0000\u0087\u0089\b\u0002\u0000\u0000\u0088"+
		"\u0087\u0001\u0000\u0000\u0000\u0089\u008c\u0001\u0000\u0000\u0000\u008a"+
		"\u0088\u0001\u0000\u0000\u0000\u008a\u008b\u0001\u0000\u0000\u0000\u008b"+
		"\u008d\u0001\u0000\u0000\u0000\u008c\u008a\u0001\u0000\u0000\u0000\u008d"+
		"\u008e\u0005\"\u0000\u0000\u008e\u0019\u0001\u0000\u0000\u0000\u008f\u0093"+
		"\u0005\'\u0000\u0000\u0090\u0092\b\u0003\u0000\u0000\u0091\u0090\u0001"+
		"\u0000\u0000\u0000\u0092\u0095\u0001\u0000\u0000\u0000\u0093\u0091\u0001"+
		"\u0000\u0000\u0000\u0093\u0094\u0001\u0000\u0000\u0000\u0094\u0096\u0001"+
		"\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0096\u0097\u0005"+
		"\'\u0000\u0000\u0097\u001b\u0001\u0000\u0000\u0000\u0098\u0099\u0005a"+
		"\u0000\u0000\u0099\u009a\u0005r\u0000\u0000\u009a\u009b\u0005e\u0000\u0000"+
		"\u009b\u00d0\u0005a\u0000\u0000\u009c\u009d\u0005b\u0000\u0000\u009d\u009e"+
		"\u0005a\u0000\u0000\u009e\u009f\u0005s\u0000\u0000\u009f\u00d0\u0005e"+
		"\u0000\u0000\u00a0\u00a1\u0005b\u0000\u0000\u00a1\u00d0\u0005r\u0000\u0000"+
		"\u00a2\u00a3\u0005c\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000\u00a4\u00d0"+
		"\u0005l\u0000\u0000\u00a5\u00a6\u0005e\u0000\u0000\u00a6\u00a7\u0005m"+
		"\u0000\u0000\u00a7\u00a8\u0005b\u0000\u0000\u00a8\u00a9\u0005e\u0000\u0000"+
		"\u00a9\u00d0\u0005d\u0000\u0000\u00aa\u00ab\u0005h\u0000\u0000\u00ab\u00d0"+
		"\u0005r\u0000\u0000\u00ac\u00ad\u0005i\u0000\u0000\u00ad\u00ae\u0005m"+
		"\u0000\u0000\u00ae\u00d0\u0005g\u0000\u0000\u00af\u00b0\u0005i\u0000\u0000"+
		"\u00b0\u00b1\u0005n\u0000\u0000\u00b1\u00b2\u0005p\u0000\u0000\u00b2\u00b3"+
		"\u0005u\u0000\u0000\u00b3\u00d0\u0005t\u0000\u0000\u00b4\u00b5\u0005l"+
		"\u0000\u0000\u00b5\u00b6\u0005i\u0000\u0000\u00b6\u00b7\u0005n\u0000\u0000"+
		"\u00b7\u00d0\u0005k\u0000\u0000\u00b8\u00b9\u0005m\u0000\u0000\u00b9\u00ba"+
		"\u0005e\u0000\u0000\u00ba\u00bb\u0005t\u0000\u0000\u00bb\u00d0\u0005a"+
		"\u0000\u0000\u00bc\u00bd\u0005p\u0000\u0000\u00bd\u00be\u0005a\u0000\u0000"+
		"\u00be\u00bf\u0005r\u0000\u0000\u00bf\u00c0\u0005a\u0000\u0000\u00c0\u00d0"+
		"\u0005m\u0000\u0000\u00c1\u00c2\u0005s\u0000\u0000\u00c2\u00c3\u0005o"+
		"\u0000\u0000\u00c3\u00c4\u0005u\u0000\u0000\u00c4\u00c5\u0005r\u0000\u0000"+
		"\u00c5\u00c6\u0005c\u0000\u0000\u00c6\u00d0\u0005e\u0000\u0000\u00c7\u00c8"+
		"\u0005t\u0000\u0000\u00c8\u00c9\u0005r\u0000\u0000\u00c9\u00ca\u0005a"+
		"\u0000\u0000\u00ca\u00cb\u0005c\u0000\u0000\u00cb\u00d0\u0005k\u0000\u0000"+
		"\u00cc\u00cd\u0005w\u0000\u0000\u00cd\u00ce\u0005b\u0000\u0000\u00ce\u00d0"+
		"\u0005r\u0000\u0000\u00cf\u0098\u0001\u0000\u0000\u0000\u00cf\u009c\u0001"+
		"\u0000\u0000\u0000\u00cf\u00a0\u0001\u0000\u0000\u0000\u00cf\u00a2\u0001"+
		"\u0000\u0000\u0000\u00cf\u00a5\u0001\u0000\u0000\u0000\u00cf\u00aa\u0001"+
		"\u0000\u0000\u0000\u00cf\u00ac\u0001\u0000\u0000\u0000\u00cf\u00af\u0001"+
		"\u0000\u0000\u0000\u00cf\u00b4\u0001\u0000\u0000\u0000\u00cf\u00b8\u0001"+
		"\u0000\u0000\u0000\u00cf\u00bc\u0001\u0000\u0000\u0000\u00cf\u00c1\u0001"+
		"\u0000\u0000\u0000\u00cf\u00c7\u0001\u0000\u0000\u0000\u00cf\u00cc\u0001"+
		"\u0000\u0000\u0000\u00d0\u001d\u0001\u0000\u0000\u0000\u00d1\u00d5\u0007"+
		"\u0004\u0000\u0000\u00d2\u00d4\u0007\u0005\u0000\u0000\u00d3\u00d2\u0001"+
		"\u0000\u0000\u0000\u00d4\u00d7\u0001\u0000\u0000\u0000\u00d5\u00d3\u0001"+
		"\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6\u001f\u0001"+
		"\u0000\u0000\u0000\u00d7\u00d5\u0001\u0000\u0000\u0000\u00d8\u00d9\u0005"+
		"/\u0000\u0000\u00d9!\u0001\u0000\u0000\u0000\u00da\u00dc\u0007\u0001\u0000"+
		"\u0000\u00db\u00da\u0001\u0000\u0000\u0000\u00dc\u00dd\u0001\u0000\u0000"+
		"\u0000\u00dd\u00db\u0001\u0000\u0000\u0000\u00dd\u00de\u0001\u0000\u0000"+
		"\u0000\u00de\u00df\u0001\u0000\u0000\u0000\u00df\u00e0\u0006\u0010\u0001"+
		"\u0000\u00e0#\u0001\u0000\u0000\u0000\r\u0000\u00012?Sfnw\u008a\u0093"+
		"\u00cf\u00d5\u00dd\u0003\u0005\u0001\u0000\u0006\u0000\u0000\u0004\u0000"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}